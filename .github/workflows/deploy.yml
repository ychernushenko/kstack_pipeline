name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  terraform-apply:
    name: Apply Terraform
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        working-directory: infra
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_prefect_account_id: ${{ vars.PREFECT_ACCOUNT_ID }}
      TF_VAR_prefect_api_key: ${{ secrets.PREFECT_API_KEY }}
      TF_VAR_prefect_workspace_id: ${{ vars.PREFECT_WORKSPACE_ID }}
      TF_VAR_prefect_work_pool_name: ${{ vars.PREFECT_WORK_POOL_NAME }}
      TF_VAR_ecr_repository_name: ${{ vars.AWS_ECR_REPOSITORY_NAME }}
      TF_VAR_account_number: ${{ vars.AWS_ACCOUNT_NUMBER }}
      TF_VAR_region: ${{ vars.AWS_REGION }}
      TF_VAR_docker_hub_username: ${{ vars.DOCKER_HUB_USERNAME }}
      TF_VAR_docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
            terraform_version: 1.9.0

      - name: Install Prefect CLI
        run: pip install prefect

      - name: Login to Prefect Cloud
        run: prefect cloud login --key ${{ secrets.PREFECT_API_KEY }} --workspace ${{ vars.PREFECT_WORKSPACE_NAME }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

  build-prefect-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: terraform-apply

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com

      - name: Build Docker Image
        run: |
          docker build -t prefect-task-image:latest .

      - name: Tag Docker Image
        run: |
          docker tag prefect-task-image:latest ${{ vars.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.AWS_ECR_REPOSITORY_NAME }}:latest

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ vars.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.AWS_ECR_REPOSITORY_NAME }}:latest

  deploy-prefect-flow:
    name: Deploy Prefect Flow
    runs-on: ubuntu-latest
    needs: build-prefect-docker

    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Prefect CLI
        run: pip install prefect

      - name: Login to Prefect Cloud
        run: prefect cloud login --key ${{ secrets.PREFECT_API_KEY }} --workspace ${{ vars.PREFECT_WORKSPACE_NAME }}

      - name: Deploy Prefect Flow
        working-directory: src
        run: python create_deployment.py --image=${{ vars.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.AWS_ECR_REPOSITORY_NAME }}:latest --name="ai-consultant-ecs-flow-deployment" --work_pool_name=${{ vars.PREFECT_WORK_POOL_NAME }}
